// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  username String
  email String @unique
  password String
  salt String
  boards Board[] @relation("UserBoards")
  tasks Task[] @relation("AssignedTasks")
  createdAt DateTime @default(now())
  updatedAt DateTime  @updatedAt
}

model Board{
  id Int @id @default(autoincrement())
  title String
  ownerId Int
  owner User @relation("UserBoards",fields:[ownerId],references:[id])
  description String
  lists List[] @relation("BoardLists")
  createdAt DateTime @default(now())
  updatedAt DateTime  @updatedAt
}

model List{
  id Int @id @default(autoincrement())
  title String
  position Int
  boardId Int
  board Board @relation("BoardLists",fields:[boardId],references:[id])
  tasks Task[] @relation("TaskLists") 
  createdAt DateTime @default(now())
  updatedAt DateTime  @updatedAt
}

model Task{
  id Int @id @default(autoincrement())
  title String
  description String?
  listId Int
  list List @relation("TaskLists",fields:[listId],references:[id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  assignedToId Int?
  assignedTo  User?  @relation("AssignedTasks", fields: [assignedToId], references: [id])
  status      String    // e.g., "todo", "in-Progress", "done"
}

model Age{
  id Int @id @default(autoincrement())
  title String
  description String?
}